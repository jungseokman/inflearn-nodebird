{"ast":null,"code":"import { all, fork, call, put, takeLatest, delay } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction logInAPI(data) {\n  return axios.post(\"/api/login\", data);\n}\n\nfunction* logIn(action) {\n  try {\n    //const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: \"LOG_IN_SUCCES\",\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_IN_FAILURE\",\n      data: err.response.data\n    });\n  }\n} //\n\n\nfunction logOutAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* logOut() {\n  try {\n    //const result = yield call(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: \"LOG_OUT_SUCCES\",\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_OUT_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(\"LOG_IN_REQUEST\", logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(\"LOG_OUT_REQUEST\", logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"sources":["/Users/seokmanjung/Desktop/Inflearn/react-nodebird/prepare/front/sagas/user.js"],"names":["all","fork","call","put","takeLatest","delay","axios","logInAPI","data","post","logIn","action","type","result","err","response","logOutAPI","logOut","watchLogIn","watchLogOut","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,UAA/B,EAA2CC,KAA3C,QAAwD,oBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,SAAOF,KAAK,CAACG,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAP;AACD;;AAED,UAAUE,KAAV,CAAgBC,MAAhB,EAAwB;AACtB,MAAI;AACF;AACA,UAAMN,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAE,eADE;AAERJ,MAAAA,IAAI,EAAEK,MAAM,CAACL;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOM,GAAP,EAAY;AACZ,UAAMX,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAE,gBADE;AAERJ,MAAAA,IAAI,EAAEM,GAAG,CAACC,QAAJ,CAAaP;AAFX,KAAD,CAAT;AAID;AACF,C,CACD;;;AAEA,SAASQ,SAAT,GAAqB;AACnB,SAAOV,KAAK,CAACG,IAAN,CAAW,aAAX,CAAP;AACD;;AAED,UAAUQ,MAAV,GAAmB;AACjB,MAAI;AACF;AACA,UAAMZ,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAE,gBADE;AAERJ,MAAAA,IAAI,EAAEK,MAAM,CAACL;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOM,GAAP,EAAY;AACZ,UAAMX,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAE,iBADE;AAERJ,MAAAA,IAAI,EAAEM,GAAG,CAACC,QAAJ,CAAaP;AAFX,KAAD,CAAT;AAID;AACF;;AAED,UAAUU,UAAV,GAAuB;AACrB,QAAMd,UAAU,CAAC,gBAAD,EAAmBM,KAAnB,CAAhB;AACD;;AAED,UAAUS,WAAV,GAAwB;AACtB,QAAMf,UAAU,CAAC,iBAAD,EAAoBa,MAApB,CAAhB;AACD;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAMpB,GAAG,CAAC,CAACC,IAAI,CAACiB,UAAD,CAAL,EAAmBjB,IAAI,CAACkB,WAAD,CAAvB,CAAD,CAAT;AACD","sourcesContent":["import { all, fork, call, put, takeLatest, delay } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction logInAPI(data) {\n  return axios.post(\"/api/login\", data);\n}\n\nfunction* logIn(action) {\n  try {\n    //const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: \"LOG_IN_SUCCES\",\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_IN_FAILURE\",\n      data: err.response.data,\n    });\n  }\n}\n//\n\nfunction logOutAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* logOut() {\n  try {\n    //const result = yield call(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: \"LOG_OUT_SUCCES\",\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_OUT_FAILURE\",\n      data: err.response.data,\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(\"LOG_IN_REQUEST\", logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(\"LOG_OUT_REQUEST\", logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}\n"]},"metadata":{},"sourceType":"module"}