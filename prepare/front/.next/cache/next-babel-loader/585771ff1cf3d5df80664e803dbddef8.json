{"ast":null,"code":"var _jsxFileName = \"/Users/seokmanjung/Desktop/Inflearn/react-nodebird/prepare/front/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppLayout from \"../components/AppLayout\";\nimport PostCard from \"../components/PostCard\";\nimport PostForm from \"../components/PostForm\";\nimport { LOAD_POST_REQUEST } from \"../reducers/post\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePost\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_POST_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    function onScroll() {\n      console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\n\n      if (parseInt(window.scrollY) + parseInt(document.documentElement.clientHeight) > parseInt(document.documentElement.scrollHeight) - 300) {\n        if (hasMorePost) {\n          dispatch({\n            type: LOAD_POST_REQUEST\n          });\n        }\n      }\n    }\n\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePost]);\n  console.log(me);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, me && __jsx(PostForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 14\n    }\n  }), mainPosts.map(post => __jsx(PostCard, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/seokmanjung/Desktop/Inflearn/react-nodebird/prepare/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","AppLayout","PostCard","PostForm","LOAD_POST_REQUEST","Home","dispatch","me","state","user","mainPosts","hasMorePost","post","type","onScroll","console","log","window","scrollY","document","documentElement","clientHeight","scrollHeight","parseInt","addEventListener","removeEventListener","map","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAASP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA6BX,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACI,IAAlB,CAA9C;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAET;AADC,KAAD,CAAR;AAGD,GAJQ,EAIN,EAJM,CAAT;AAKAN,EAAAA,SAAS,CAAC,MAAM;AACd,aAASgB,QAAT,GAAoB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CACEC,MAAM,CAACC,OADT,EAEEC,QAAQ,CAACC,eAAT,CAAyBC,YAF3B,EAGEF,QAAQ,CAACC,eAAT,CAAyBE,YAH3B;;AAKA,UACEC,QAAQ,CAACN,MAAM,CAACC,OAAR,CAAR,GACEK,QAAQ,CAACJ,QAAQ,CAACC,eAAT,CAAyBC,YAA1B,CADV,GAEAE,QAAQ,CAACJ,QAAQ,CAACC,eAAT,CAAyBE,YAA1B,CAAR,GAAkD,GAHpD,EAIE;AACA,YAAIX,WAAJ,EAAiB;AACfL,UAAAA,QAAQ,CAAC;AACPO,YAAAA,IAAI,EAAET;AADC,WAAD,CAAR;AAGD;AACF;AACF;;AACDa,IAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCV,QAAlC;AACA,WAAO,MAAM;AACXG,MAAAA,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCX,QAArC;AACD,KAFD;AAGD,GAvBQ,EAuBN,CAACH,WAAD,CAvBM,CAAT;AAyBAI,EAAAA,OAAO,CAACC,GAAR,CAAYT,EAAZ;AACA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,EAAE,IAAI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADT,EAEGG,SAAS,CAACgB,GAAV,CAAed,IAAD,IACb,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACe,EAApB;AAAwB,IAAA,IAAI,EAAEf,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFH,CADF;AAQD,CA5CD;;AA8CA,eAAeP,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppLayout from \"../components/AppLayout\";\nimport PostCard from \"../components/PostCard\";\nimport PostForm from \"../components/PostForm\";\nimport { LOAD_POST_REQUEST } from \"../reducers/post\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const { me } = useSelector((state) => state.user);\n  const { mainPosts, hasMorePost } = useSelector((state) => state.post);\n\n  useEffect(() => {\n    dispatch({\n      type: LOAD_POST_REQUEST,\n    });\n  }, []);\n  useEffect(() => {\n    function onScroll() {\n      console.log(\n        window.scrollY,\n        document.documentElement.clientHeight,\n        document.documentElement.scrollHeight\n      );\n      if (\n        parseInt(window.scrollY) +\n          parseInt(document.documentElement.clientHeight) >\n        parseInt(document.documentElement.scrollHeight) - 300\n      ) {\n        if (hasMorePost) {\n          dispatch({\n            type: LOAD_POST_REQUEST,\n          });\n        }\n      }\n    }\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePost]);\n\n  console.log(me);\n  return (\n    <AppLayout>\n      {me && <PostForm />}\n      {mainPosts.map((post) => (\n        <PostCard key={post.id} post={post} />\n      ))}\n    </AppLayout>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}