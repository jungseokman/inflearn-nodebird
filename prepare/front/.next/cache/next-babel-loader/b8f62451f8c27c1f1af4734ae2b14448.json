{"ast":null,"code":"var _jsxFileName = \"/Users/seokmanjung/Desktop/Inflearn/react-nodebird/prepare/front/components/CommentForm.js\";\nvar __jsx = React.createElement;\nimport { Form, Input } from \"antd\";\nimport React, { useCallback } from \"react\";\nimport useInput from \"../hooks/useInput\";\n\nconst CommentForm = ({\n  post\n}) => {\n  const [commentText, onChangeCommentText] = useInput(\"\");\n  const onSubmitComment = useCallback(e => {\n    setCommentText(e.target.value);\n  }, [commentText]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default CommentForm;","map":{"version":3,"sources":["/Users/seokmanjung/Desktop/Inflearn/react-nodebird/prepare/front/components/CommentForm.js"],"names":["Form","Input","React","useCallback","useInput","CommentForm","post","commentText","onChangeCommentText","onSubmitComment","e","setCommentText","target","value"],"mappings":";;AAAA,SAASA,IAAT,EAAeC,KAAf,QAA4B,MAA5B;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAChC,QAAM,CAACC,WAAD,EAAcC,mBAAd,IAAqCJ,QAAQ,CAAC,EAAD,CAAnD;AACA,QAAMK,eAAe,GAAGN,WAAW,CAChCO,CAAD,IAAO;AACLC,IAAAA,cAAc,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAd;AACD,GAHgC,EAIjC,CAACN,WAAD,CAJiC,CAAnC;AAMA,SACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEF,WAAvB;AAAoC,IAAA,QAAQ,EAAEC,mBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAbD;;AAeA,eAAeH,WAAf","sourcesContent":["import { Form, Input } from \"antd\";\nimport React, { useCallback } from \"react\";\nimport useInput from \"../hooks/useInput\";\n\nconst CommentForm = ({ post }) => {\n  const [commentText, onChangeCommentText] = useInput(\"\");\n  const onSubmitComment = useCallback(\n    (e) => {\n      setCommentText(e.target.value);\n    },\n    [commentText]\n  );\n  return (\n    <Form onFinish={onSubmitComment}>\n      <Input.TextArea value={commentText} onChange={onChangeCommentText} />\n    </Form>\n  );\n};\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}